t_command
	*init_command_from_tokens(char **tokens, char *sep)
{
	t_command	*cmd;

	cmd = malloc(sizeof(t_command));
	cmd->sep = sep;
	cmd->tokens = dup_tab(tokens);
	cmd->redirections = extract_redirects(tokens);
	cmd->tokens = get_pure_tokens(tokens);
	cmd->fd_input = 0;
	cmd->fd_output = 1;
	cmd->pid = -1;
	return (cmd);
}

t_command
	*command_from_tokens(char **tokens, char *sep)
{
	char		*path_buf;
	char		*found_exec;
	t_command	*cmd;
	
	cmd = init_command_from_tokens(tokens, sep);
	path_buf = alloc_path_buf(tokens[0]);// I can't exactly know the size of the command's path in advance so i I have to alloc the maximum size possible to avoid buffer overflow :(
	found_exec = find_exec(path_buf, tokens[0]);
	if (!path_buf || !found_exec)
	{
		free(path_buf);
		cmd->cmd = ft_strdup(cmd->tokens[0]);
		return (cmd);
	}
	if (found_exec == tokens[0])
		ft_strlcpy(path_buf, tokens[0], PATH_MAX);
	cmd->cmd = path_buf;
	return(cmd);
}